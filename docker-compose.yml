services:
  app:
    build:
      context: ./backend
      dockerfile: dockerfile
    container_name: feature_toggle_backend
    ports:
      - "3050:3050"
    environment:
      NODE_ENV: prod
      DB_USER: admin
      DB_PASSWORD: admin123
      DB_NAME: feature_toggle
      DB_HOST: postgres
      DB_PORT: 5432
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: SUPER_SECRET_KEY
      JWT_EXPIRES_IN: 1h
      PORT: 3050
    depends_on:
      - postgres
      - redis
    command: yarn start

  postgres:
    image: postgres:15
    container_name: feature_toggle_postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: feature_toggle
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: feature_toggle_redis
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  prometheus:
    image: prom/prometheus:latest
    container_name: feature_toggle_prometheus
    restart: always
    volumes:
      - ./backend/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: feature_toggle_grafana
    restart: always
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  pgdata:
  redisdata:
